/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package eu.rawfie.uxv;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** General system information */
@org.apache.avro.specific.AvroGenerated
public class SystemInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7659085664576658206L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SystemInfo\",\"namespace\":\"eu.rawfie.uxv\",\"doc\":\"General system information\",\"fields\":[{\"name\":\"header\",\"type\":{\"type\":\"record\",\"name\":\"Header\",\"fields\":[{\"name\":\"sourceSystem\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Canonical name of the originating system\"},{\"name\":\"sourceModule\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Canonical name of the module within a given system that originated the message\"},{\"name\":\"time\",\"type\":\"long\",\"doc\":\"Time elapsed since the Unix epoch\",\"unit\":\"ms\"}]}},{\"name\":\"vendor\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"System vendor\"},{\"name\":\"model\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"System model\"},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"SystemType\",\"doc\":\"System type\",\"symbols\":[\"UUV\",\"USV\",\"UGV\",\"UAV\",\"FIXED\"]}},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Canonical system name\"},{\"name\":\"owner\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"System owner\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   public eu.rawfie.uxv.Header header;
  /** System vendor */
   public java.lang.String vendor;
  /** System model */
   public java.lang.String model;
   public eu.rawfie.uxv.SystemType type;
  /** Canonical system name */
   public java.lang.String name;
  /** System owner */
   public java.lang.String owner;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SystemInfo() {}

  /**
   * All-args constructor.
   * @param header The new value for header
   * @param vendor System vendor
   * @param model System model
   * @param type The new value for type
   * @param name Canonical system name
   * @param owner System owner
   */
  public SystemInfo(eu.rawfie.uxv.Header header, java.lang.String vendor, java.lang.String model, eu.rawfie.uxv.SystemType type, java.lang.String name, java.lang.String owner) {
    this.header = header;
    this.vendor = vendor;
    this.model = model;
    this.type = type;
    this.name = name;
    this.owner = owner;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return header;
    case 1: return vendor;
    case 2: return model;
    case 3: return type;
    case 4: return name;
    case 5: return owner;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: header = (eu.rawfie.uxv.Header)value$; break;
    case 1: vendor = (java.lang.String)value$; break;
    case 2: model = (java.lang.String)value$; break;
    case 3: type = (eu.rawfie.uxv.SystemType)value$; break;
    case 4: name = (java.lang.String)value$; break;
    case 5: owner = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'header' field.
   * @return The value of the 'header' field.
   */
  public eu.rawfie.uxv.Header getHeader() {
    return header;
  }

  /**
   * Sets the value of the 'header' field.
   * @param value the value to set.
   */
  public void setHeader(eu.rawfie.uxv.Header value) {
    this.header = value;
  }

  /**
   * Gets the value of the 'vendor' field.
   * @return System vendor
   */
  public java.lang.String getVendor() {
    return vendor;
  }

  /**
   * Sets the value of the 'vendor' field.
   * System vendor
   * @param value the value to set.
   */
  public void setVendor(java.lang.String value) {
    this.vendor = value;
  }

  /**
   * Gets the value of the 'model' field.
   * @return System model
   */
  public java.lang.String getModel() {
    return model;
  }

  /**
   * Sets the value of the 'model' field.
   * System model
   * @param value the value to set.
   */
  public void setModel(java.lang.String value) {
    this.model = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public eu.rawfie.uxv.SystemType getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(eu.rawfie.uxv.SystemType value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return Canonical system name
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * Canonical system name
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'owner' field.
   * @return System owner
   */
  public java.lang.String getOwner() {
    return owner;
  }

  /**
   * Sets the value of the 'owner' field.
   * System owner
   * @param value the value to set.
   */
  public void setOwner(java.lang.String value) {
    this.owner = value;
  }

  /**
   * Creates a new SystemInfo RecordBuilder.
   * @return A new SystemInfo RecordBuilder
   */
  public static eu.rawfie.uxv.SystemInfo.Builder newBuilder() {
    return new eu.rawfie.uxv.SystemInfo.Builder();
  }

  /**
   * Creates a new SystemInfo RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SystemInfo RecordBuilder
   */
  public static eu.rawfie.uxv.SystemInfo.Builder newBuilder(eu.rawfie.uxv.SystemInfo.Builder other) {
    return new eu.rawfie.uxv.SystemInfo.Builder(other);
  }

  /**
   * Creates a new SystemInfo RecordBuilder by copying an existing SystemInfo instance.
   * @param other The existing instance to copy.
   * @return A new SystemInfo RecordBuilder
   */
  public static eu.rawfie.uxv.SystemInfo.Builder newBuilder(eu.rawfie.uxv.SystemInfo other) {
    return new eu.rawfie.uxv.SystemInfo.Builder(other);
  }

  /**
   * RecordBuilder for SystemInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SystemInfo>
    implements org.apache.avro.data.RecordBuilder<SystemInfo> {

    private eu.rawfie.uxv.Header header;
    private eu.rawfie.uxv.Header.Builder headerBuilder;
    /** System vendor */
    private java.lang.String vendor;
    /** System model */
    private java.lang.String model;
    private eu.rawfie.uxv.SystemType type;
    /** Canonical system name */
    private java.lang.String name;
    /** System owner */
    private java.lang.String owner;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(eu.rawfie.uxv.SystemInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.header)) {
        this.header = data().deepCopy(fields()[0].schema(), other.header);
        fieldSetFlags()[0] = true;
      }
      if (other.hasHeaderBuilder()) {
        this.headerBuilder = eu.rawfie.uxv.Header.newBuilder(other.getHeaderBuilder());
      }
      if (isValidValue(fields()[1], other.vendor)) {
        this.vendor = data().deepCopy(fields()[1].schema(), other.vendor);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.model)) {
        this.model = data().deepCopy(fields()[2].schema(), other.model);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.type)) {
        this.type = data().deepCopy(fields()[3].schema(), other.type);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.name)) {
        this.name = data().deepCopy(fields()[4].schema(), other.name);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.owner)) {
        this.owner = data().deepCopy(fields()[5].schema(), other.owner);
        fieldSetFlags()[5] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing SystemInfo instance
     * @param other The existing instance to copy.
     */
    private Builder(eu.rawfie.uxv.SystemInfo other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.header)) {
        this.header = data().deepCopy(fields()[0].schema(), other.header);
        fieldSetFlags()[0] = true;
      }
      this.headerBuilder = null;
      if (isValidValue(fields()[1], other.vendor)) {
        this.vendor = data().deepCopy(fields()[1].schema(), other.vendor);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.model)) {
        this.model = data().deepCopy(fields()[2].schema(), other.model);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.type)) {
        this.type = data().deepCopy(fields()[3].schema(), other.type);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.name)) {
        this.name = data().deepCopy(fields()[4].schema(), other.name);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.owner)) {
        this.owner = data().deepCopy(fields()[5].schema(), other.owner);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'header' field.
      * @return The value.
      */
    public eu.rawfie.uxv.Header getHeader() {
      return header;
    }

    /**
      * Sets the value of the 'header' field.
      * @param value The value of 'header'.
      * @return This builder.
      */
    public eu.rawfie.uxv.SystemInfo.Builder setHeader(eu.rawfie.uxv.Header value) {
      validate(fields()[0], value);
      this.headerBuilder = null;
      this.header = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'header' field has been set.
      * @return True if the 'header' field has been set, false otherwise.
      */
    public boolean hasHeader() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'header' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public eu.rawfie.uxv.Header.Builder getHeaderBuilder() {
      if (headerBuilder == null) {
        if (hasHeader()) {
          setHeaderBuilder(eu.rawfie.uxv.Header.newBuilder(header));
        } else {
          setHeaderBuilder(eu.rawfie.uxv.Header.newBuilder());
        }
      }
      return headerBuilder;
    }

    /**
     * Sets the Builder instance for the 'header' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public eu.rawfie.uxv.SystemInfo.Builder setHeaderBuilder(eu.rawfie.uxv.Header.Builder value) {
      clearHeader();
      headerBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'header' field has an active Builder instance
     * @return True if the 'header' field has an active Builder instance
     */
    public boolean hasHeaderBuilder() {
      return headerBuilder != null;
    }

    /**
      * Clears the value of the 'header' field.
      * @return This builder.
      */
    public eu.rawfie.uxv.SystemInfo.Builder clearHeader() {
      header = null;
      headerBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'vendor' field.
      * System vendor
      * @return The value.
      */
    public java.lang.String getVendor() {
      return vendor;
    }

    /**
      * Sets the value of the 'vendor' field.
      * System vendor
      * @param value The value of 'vendor'.
      * @return This builder.
      */
    public eu.rawfie.uxv.SystemInfo.Builder setVendor(java.lang.String value) {
      validate(fields()[1], value);
      this.vendor = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'vendor' field has been set.
      * System vendor
      * @return True if the 'vendor' field has been set, false otherwise.
      */
    public boolean hasVendor() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'vendor' field.
      * System vendor
      * @return This builder.
      */
    public eu.rawfie.uxv.SystemInfo.Builder clearVendor() {
      vendor = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'model' field.
      * System model
      * @return The value.
      */
    public java.lang.String getModel() {
      return model;
    }

    /**
      * Sets the value of the 'model' field.
      * System model
      * @param value The value of 'model'.
      * @return This builder.
      */
    public eu.rawfie.uxv.SystemInfo.Builder setModel(java.lang.String value) {
      validate(fields()[2], value);
      this.model = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'model' field has been set.
      * System model
      * @return True if the 'model' field has been set, false otherwise.
      */
    public boolean hasModel() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'model' field.
      * System model
      * @return This builder.
      */
    public eu.rawfie.uxv.SystemInfo.Builder clearModel() {
      model = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public eu.rawfie.uxv.SystemType getType() {
      return type;
    }

    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public eu.rawfie.uxv.SystemInfo.Builder setType(eu.rawfie.uxv.SystemType value) {
      validate(fields()[3], value);
      this.type = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public eu.rawfie.uxv.SystemInfo.Builder clearType() {
      type = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * Canonical system name
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * Canonical system name
      * @param value The value of 'name'.
      * @return This builder.
      */
    public eu.rawfie.uxv.SystemInfo.Builder setName(java.lang.String value) {
      validate(fields()[4], value);
      this.name = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * Canonical system name
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'name' field.
      * Canonical system name
      * @return This builder.
      */
    public eu.rawfie.uxv.SystemInfo.Builder clearName() {
      name = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'owner' field.
      * System owner
      * @return The value.
      */
    public java.lang.String getOwner() {
      return owner;
    }

    /**
      * Sets the value of the 'owner' field.
      * System owner
      * @param value The value of 'owner'.
      * @return This builder.
      */
    public eu.rawfie.uxv.SystemInfo.Builder setOwner(java.lang.String value) {
      validate(fields()[5], value);
      this.owner = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'owner' field has been set.
      * System owner
      * @return True if the 'owner' field has been set, false otherwise.
      */
    public boolean hasOwner() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'owner' field.
      * System owner
      * @return This builder.
      */
    public eu.rawfie.uxv.SystemInfo.Builder clearOwner() {
      owner = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public SystemInfo build() {
      try {
        SystemInfo record = new SystemInfo();
        if (headerBuilder != null) {
          record.header = this.headerBuilder.build();
        } else {
          record.header = fieldSetFlags()[0] ? this.header : (eu.rawfie.uxv.Header) defaultValue(fields()[0]);
        }
        record.vendor = fieldSetFlags()[1] ? this.vendor : (java.lang.String) defaultValue(fields()[1]);
        record.model = fieldSetFlags()[2] ? this.model : (java.lang.String) defaultValue(fields()[2]);
        record.type = fieldSetFlags()[3] ? this.type : (eu.rawfie.uxv.SystemType) defaultValue(fields()[3]);
        record.name = fieldSetFlags()[4] ? this.name : (java.lang.String) defaultValue(fields()[4]);
        record.owner = fieldSetFlags()[5] ? this.owner : (java.lang.String) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
