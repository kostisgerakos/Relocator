/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package eu.rawfie.general.service.types;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class RCHealthStatus extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 879152746754602919L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RCHealthStatus\",\"namespace\":\"eu.rawfie.general.service.types\",\"fields\":[{\"name\":\"testbedId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"timestamp\",\"type\":\"long\",\"unit\":\"ms\"},{\"name\":\"healthStatus\",\"type\":{\"type\":\"enum\",\"name\":\"RCHealthStatusEnum\",\"symbols\":[\"OK\",\"WARNING\",\"CRITICAL\"]}},{\"name\":\"message\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"String containing the details of the current status\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   public java.lang.String testbedId;
   public long timestamp;
   public eu.rawfie.general.service.types.RCHealthStatusEnum healthStatus;
  /** String containing the details of the current status */
   public java.lang.String message;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public RCHealthStatus() {}

  /**
   * All-args constructor.
   * @param testbedId The new value for testbedId
   * @param timestamp The new value for timestamp
   * @param healthStatus The new value for healthStatus
   * @param message String containing the details of the current status
   */
  public RCHealthStatus(java.lang.String testbedId, java.lang.Long timestamp, eu.rawfie.general.service.types.RCHealthStatusEnum healthStatus, java.lang.String message) {
    this.testbedId = testbedId;
    this.timestamp = timestamp;
    this.healthStatus = healthStatus;
    this.message = message;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return testbedId;
    case 1: return timestamp;
    case 2: return healthStatus;
    case 3: return message;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: testbedId = (java.lang.String)value$; break;
    case 1: timestamp = (java.lang.Long)value$; break;
    case 2: healthStatus = (eu.rawfie.general.service.types.RCHealthStatusEnum)value$; break;
    case 3: message = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'testbedId' field.
   * @return The value of the 'testbedId' field.
   */
  public java.lang.String getTestbedId() {
    return testbedId;
  }

  /**
   * Sets the value of the 'testbedId' field.
   * @param value the value to set.
   */
  public void setTestbedId(java.lang.String value) {
    this.testbedId = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public java.lang.Long getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.Long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'healthStatus' field.
   * @return The value of the 'healthStatus' field.
   */
  public eu.rawfie.general.service.types.RCHealthStatusEnum getHealthStatus() {
    return healthStatus;
  }

  /**
   * Sets the value of the 'healthStatus' field.
   * @param value the value to set.
   */
  public void setHealthStatus(eu.rawfie.general.service.types.RCHealthStatusEnum value) {
    this.healthStatus = value;
  }

  /**
   * Gets the value of the 'message' field.
   * @return String containing the details of the current status
   */
  public java.lang.String getMessage() {
    return message;
  }

  /**
   * Sets the value of the 'message' field.
   * String containing the details of the current status
   * @param value the value to set.
   */
  public void setMessage(java.lang.String value) {
    this.message = value;
  }

  /**
   * Creates a new RCHealthStatus RecordBuilder.
   * @return A new RCHealthStatus RecordBuilder
   */
  public static eu.rawfie.general.service.types.RCHealthStatus.Builder newBuilder() {
    return new eu.rawfie.general.service.types.RCHealthStatus.Builder();
  }

  /**
   * Creates a new RCHealthStatus RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new RCHealthStatus RecordBuilder
   */
  public static eu.rawfie.general.service.types.RCHealthStatus.Builder newBuilder(eu.rawfie.general.service.types.RCHealthStatus.Builder other) {
    return new eu.rawfie.general.service.types.RCHealthStatus.Builder(other);
  }

  /**
   * Creates a new RCHealthStatus RecordBuilder by copying an existing RCHealthStatus instance.
   * @param other The existing instance to copy.
   * @return A new RCHealthStatus RecordBuilder
   */
  public static eu.rawfie.general.service.types.RCHealthStatus.Builder newBuilder(eu.rawfie.general.service.types.RCHealthStatus other) {
    return new eu.rawfie.general.service.types.RCHealthStatus.Builder(other);
  }

  /**
   * RecordBuilder for RCHealthStatus instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RCHealthStatus>
    implements org.apache.avro.data.RecordBuilder<RCHealthStatus> {

    private java.lang.String testbedId;
    private long timestamp;
    private eu.rawfie.general.service.types.RCHealthStatusEnum healthStatus;
    /** String containing the details of the current status */
    private java.lang.String message;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(eu.rawfie.general.service.types.RCHealthStatus.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.testbedId)) {
        this.testbedId = data().deepCopy(fields()[0].schema(), other.testbedId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[1].schema(), other.timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.healthStatus)) {
        this.healthStatus = data().deepCopy(fields()[2].schema(), other.healthStatus);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.message)) {
        this.message = data().deepCopy(fields()[3].schema(), other.message);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing RCHealthStatus instance
     * @param other The existing instance to copy.
     */
    private Builder(eu.rawfie.general.service.types.RCHealthStatus other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.testbedId)) {
        this.testbedId = data().deepCopy(fields()[0].schema(), other.testbedId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[1].schema(), other.timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.healthStatus)) {
        this.healthStatus = data().deepCopy(fields()[2].schema(), other.healthStatus);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.message)) {
        this.message = data().deepCopy(fields()[3].schema(), other.message);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'testbedId' field.
      * @return The value.
      */
    public java.lang.String getTestbedId() {
      return testbedId;
    }

    /**
      * Sets the value of the 'testbedId' field.
      * @param value The value of 'testbedId'.
      * @return This builder.
      */
    public eu.rawfie.general.service.types.RCHealthStatus.Builder setTestbedId(java.lang.String value) {
      validate(fields()[0], value);
      this.testbedId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'testbedId' field has been set.
      * @return True if the 'testbedId' field has been set, false otherwise.
      */
    public boolean hasTestbedId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'testbedId' field.
      * @return This builder.
      */
    public eu.rawfie.general.service.types.RCHealthStatus.Builder clearTestbedId() {
      testbedId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public java.lang.Long getTimestamp() {
      return timestamp;
    }

    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public eu.rawfie.general.service.types.RCHealthStatus.Builder setTimestamp(long value) {
      validate(fields()[1], value);
      this.timestamp = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public eu.rawfie.general.service.types.RCHealthStatus.Builder clearTimestamp() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'healthStatus' field.
      * @return The value.
      */
    public eu.rawfie.general.service.types.RCHealthStatusEnum getHealthStatus() {
      return healthStatus;
    }

    /**
      * Sets the value of the 'healthStatus' field.
      * @param value The value of 'healthStatus'.
      * @return This builder.
      */
    public eu.rawfie.general.service.types.RCHealthStatus.Builder setHealthStatus(eu.rawfie.general.service.types.RCHealthStatusEnum value) {
      validate(fields()[2], value);
      this.healthStatus = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'healthStatus' field has been set.
      * @return True if the 'healthStatus' field has been set, false otherwise.
      */
    public boolean hasHealthStatus() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'healthStatus' field.
      * @return This builder.
      */
    public eu.rawfie.general.service.types.RCHealthStatus.Builder clearHealthStatus() {
      healthStatus = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'message' field.
      * String containing the details of the current status
      * @return The value.
      */
    public java.lang.String getMessage() {
      return message;
    }

    /**
      * Sets the value of the 'message' field.
      * String containing the details of the current status
      * @param value The value of 'message'.
      * @return This builder.
      */
    public eu.rawfie.general.service.types.RCHealthStatus.Builder setMessage(java.lang.String value) {
      validate(fields()[3], value);
      this.message = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'message' field has been set.
      * String containing the details of the current status
      * @return True if the 'message' field has been set, false otherwise.
      */
    public boolean hasMessage() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'message' field.
      * String containing the details of the current status
      * @return This builder.
      */
    public eu.rawfie.general.service.types.RCHealthStatus.Builder clearMessage() {
      message = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public RCHealthStatus build() {
      try {
        RCHealthStatus record = new RCHealthStatus();
        record.testbedId = fieldSetFlags()[0] ? this.testbedId : (java.lang.String) defaultValue(fields()[0]);
        record.timestamp = fieldSetFlags()[1] ? this.timestamp : (java.lang.Long) defaultValue(fields()[1]);
        record.healthStatus = fieldSetFlags()[2] ? this.healthStatus : (eu.rawfie.general.service.types.RCHealthStatusEnum) defaultValue(fields()[2]);
        record.message = fieldSetFlags()[3] ? this.message : (java.lang.String) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
